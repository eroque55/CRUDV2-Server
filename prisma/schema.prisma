// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:1234@localhost:5432/"
}

model Card {
  id Int @id @default(autoincrement())
  number String @unique
  cardholder String
  cvv String
  preferential Boolean
  expirationDate String
  cardBrand String

  customer Customer @relation(fields: [customerId], references: [id])
  customerId Int @map("clienteId")
}

model City {
  id Int @id @default(autoincrement())
  name String @unique

  state State @relation(fields: [stateId], references: [id])
  stateId Int

  Address Address[]
}

model Customer {
  id Int @id @default(autoincrement())
  name String
  birthDate DateTime @db.Date
  cpf String @unique
  gender String
  email String @unique
  password String
  status Boolean
  ranking Int

  Card Card[]
  Address Address[]
  Phone Phone[]
}

model Address {
  id Int @id @default(autoincrement())
  nickname String
  street String
  number String
  neighborhood String
  cep String
  complement String
  addressType String
  streetType String
  residenceType String

  customer Customer @relation(fields: [customerId], references: [id])
  customerId Int

  city City @relation(fields: [cityId], references: [id])
  cityId Int
}

model State {
  id Int @id @default(autoincrement())
  name String @unique

  country Country @relation(fields: [countryId], references: [id])
  countryId Int

  City City[]
}

model Country {
  id Int @id @default(autoincrement())
  name String @unique

  State State[]
}

model Log {
  id Int @id @default(autoincrement())
  entity String
  user String
  createdAt DateTime @updatedAt
}

model Phone {
  id Int @id @default(autoincrement())
  ddd String
  number String @unique
  phoneType String

  customer Customer @relation(fields: [customerId], references: [id])
  customerId Int
}